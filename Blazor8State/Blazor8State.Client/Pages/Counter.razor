@page "/counter"
@attribute [RenderModeInteractiveAuto]
@inject SessionList sessions
@inject IJSRuntime JsRuntime

<PageTitle>Counter</PageTitle>

<p>@myCookieValue</p>

@if (services is not null && state is not null)
{
    <p>State: @state.ServiceId</p>
}

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;
    private string myCookieValue = "<unread>";
    private SessionServices services;
    private StateService state;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            myCookieValue = await JsRuntime.InvokeAsync<string>("ReadCookie.ReadCookie", "sessionId");
            services = sessions[myCookieValue];
            state = (StateService)services[typeof(StateService)];
            StateHasChanged();
        }
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
